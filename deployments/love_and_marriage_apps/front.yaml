apiVersion: v1
kind: Service
metadata:
  name: front
  namespace: default
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '80'
spec:
  selector:
    app: front
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 8000
  sessionAffinity: None
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '8000'
spec:
  selector:
    matchLabels:
      app: front
  replicas: 1
  template:
    metadata:
      labels:
        app: front
      annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/port:   '8000'
    spec:
      containers:
      - name: front
        image: front:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        env:
        - name: APP_PORT
          value: "8000"
        livenessProbe:
          httpGet:
            path: /health_check
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /health_check
            port: 8000
          failureThreshold: 30
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: front-v1
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: front
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50